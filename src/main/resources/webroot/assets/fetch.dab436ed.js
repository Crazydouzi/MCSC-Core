var n=Object.defineProperty;var h=(r,e,s)=>e in r?n(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var i=(r,e,s)=>(h(r,typeof e!="symbol"?e+"":e,s),s);class c{constructor(){i(this,"baseOptions",{method:"GET",headers:{"Content-Type":"application/json;charset=UTF-8"},keepalive:!0,cache:"no-cache"})}encode(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}paramsSerializer(e){let s=[];return Object.keys(e).forEach(t=>{s.push(this.encode(t)+"="+this.encode(e[t].toString()))}),s.join("&")}async request(e,s){let t=this.baseOptions,a=e.url;"headers"in e&&(t.headers=e.headers),s&&(e.method=="GET"||e.method=="DELETE"?a=a+"?"+this.paramsSerializer(s):t.body=JSON.stringify(s)),t.method=e.method;const o=await fetch(a,t);if(o.status>=200&&o.status<=300)return o.json();throw new Error("[API Request]Network error: "+o.statusText)}}const l=new c;export{l as $};
